---
interface Props {
  title: string;
  description: string;
  ogImage?: string;
  article?: boolean;
  publishDate?: string;
  modifiedDate?: string;
}
const {
  title,
  description,
  ogImage,
  article = false,
  publishDate,
  modifiedDate
}: Props = Astro.props;

import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

import "../global.css";

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
  .toString()
  .replace(/\/$/, "");

const siteTitle = "BLISS - Berlin Learning & Intelligent Systems Society";
const fullTitle = title === siteTitle ? title : `${title} | BLISS`;

// Current date in ISO format for freshness indication
const currentDate = new Date().toISOString();
---

<!doctype html>
<html lang="en">
  <head>
    <title>{fullTitle}</title>
    <link rel="canonical" href={canonicalURL} />
    <meta name="description" content={description} />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <meta name="google-site-verification" content="_xg6ClW404XDoyS14BrmvIDAmENsoQgsTfTXc4Of2jU" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={article ? "article" : "website"} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage ? ogImage : "https://www.bliss.berlin/assets/bliss-banner.png"} />
    <meta property="og:site_name" content="BLISS Berlin" />
    {article && publishDate && <meta property="article:published_time" content={publishDate} />}
    {article && modifiedDate && <meta property="article:modified_time" content={modifiedDate} />}

    <!-- Twitter (X) -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={fullTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage ? ogImage : "https://www.bliss.berlin/assets/bliss-banner.png"} />

    <!-- Keywords -->
    <meta name="keywords" content="ai, machine learning, artificial intelligence, events, berlin, speaker series, tech community, bliss berlin, data science, deep learning" />

    <!-- Theme and icons -->
    <meta name="theme-color" content="#000000" />
    <link rel="icon" href="/favicon.ico" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#000000" />
    <link rel="manifest" href="/site.webmanifest" />

    <!-- Sitemap -->
    <link rel="sitemap" type="application/xml" title="Sitemap" href="/sitemap-index.xml" />

    <!-- Structured data for Organization -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "BLISS Berlin",
        "url": "https://bliss.berlin",
        "logo": "https://www.bliss.berlin/assets/bliss-logo.png",
        "description": "Berlin Learning & Intelligent Systems Society - Research-focused non-profit organization for AI and machine learning in Berlin",
        "sameAs": [
          "https://github.com/Bliss-e-V",
          "https://www.linkedin.com/company/bliss-berlin"
        ]
      }
    </script>

    <!-- Add webpage structured data -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebPage",
        "url": canonicalURL,
        "name": fullTitle,
        "description": description,
        "dateModified": currentDate,
        "isPartOf": {
          "@type": "WebSite",
          "name": "BLISS Berlin",
          "url": "https://bliss.berlin"
        }
      })}
    </script>

    <!-- LocalBusiness structured data for local SEO -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "EducationalOrganization",
        "name": "BLISS Berlin",
        "alternateName": "Berlin Learning & Intelligent Systems Society",
        "url": "https://bliss.berlin",
        "logo": "https://www.bliss.berlin/assets/bliss-logo.png",
        "image": "https://www.bliss.berlin/assets/bliss-banner.png",
        "description": "Berlin's research-focused AI non-profit organization connecting passionate individuals in machine learning through weekly reading groups, speaker and diversity events, and hackathons.",
        "address": {
          "@type": "PostalAddress",
          "addressLocality": "Berlin",
          "addressRegion": "Berlin",
          "addressCountry": "DE"
        },
        "geo": {
          "@type": "GeoCoordinates",
          "latitude": "52.5200",
          "longitude": "13.4050"
        },
        "sameAs": [
          "https://github.com/Bliss-e-V",
          "https://www.linkedin.com/company/bliss-berlin"
        ]
      })}
    </script>

    <!-- If this is an article page, add Article structured data -->
    {article && publishDate && (
      <script type="application/ld+json">
        {JSON.stringify({
          "@context": "https://schema.org",
          "@type": "Article",
          "headline": title,
          "description": description,
          "image": ogImage ? ogImage : "https://www.bliss.berlin/assets/bliss-banner.png",
          "datePublished": publishDate,
          "dateModified": modifiedDate || currentDate,
          "publisher": {
            "@type": "Organization",
            "name": "BLISS Berlin",
            "logo": {
              "@type": "ImageObject",
              "url": "https://www.bliss.berlin/assets/bliss-logo.png"
            }
          },
          "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": canonicalURL
          }
        })}
      </script>
    )}
  </head>

  <body>
    <Header />
    <div class="container flex-1 pt-40">
      <slot />
    </div>
    <Footer />
  </body>
</html>

<script>
  // enable web analytics via vercel
  import { inject } from "@vercel/analytics";

  // @ts-ignore
  globalThis.process = { env: { NODE_ENV: import.meta.env.MODE } };
  inject();
</script>

<style is:global>
  @reference "../global.css";

  :root {
    --accent: #cb2d3e;
    --accent-dark: #3c0909;
    --accent-light: #ef473a;
    --background: #000000;
    --background-secondary: #101010;
    --primary: #ffffff;
    --secondary: #adb5bd;
    --tertiary: #6c757d;
    --border: #3b424d;
    --color: var(--accent);
  }

  ::selection {
    background: var(--accent);
    color: white;
  }

  html {
    background-color: var(--background);
  }

  body {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    color: var(--primary);
  }

  a {
    text-decoration: underline;
    text-decoration-color: transparent;
    text-underline-offset: 4px;
    transition: text-decoration-color 300ms;
  }

  a:hover {
    text-decoration-color: var(--color);
  }

  .nounderline:hover {
    text-decoration-color: transparent;
  }

  .container {
    width: 100%;
    max-width: 80rem;
    padding-left: 20px;
    padding-right: 20px;
    margin: 0 auto;
  }

  .full-width {
    width: 100vw;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
  }

  article h1,
  article h2,
  article h3 {
    @apply text-primary;
  }
  article h1 {
    @apply text-3xl sm:text-5xl;
  }

  article h2 {
    @apply text-2xl sm:text-4xl;
  }

  article h3 {
    @apply text-xl sm:text-2xl;
  }

  article p {
    @apply my-1 text-justify;
  }

  article p,
  article li {
    @apply text-secondary text-lg font-light sm:leading-relaxed sm:text-xl;
  }
  article hr {
    @apply border-t-[1px] border-border mb-2;
  }

  article strong {
    @apply text-primary font-normal;
  }

  article blockquote {
    @apply bg-background-secondary border-l-4 border-accent px-3 py-2 my-2;
  }

  article p > code {
    @apply text-[85%] text-accent bg-accent-dark rounded-lg p-1;
  }

  article pre {
    @apply p-4 my-4 rounded-lg;
  }

  article ol,
  article ul {
    @apply my-2;
  }
  article ul li {
    @apply list-item list-disc ml-[30px];
  }

  article ol li {
    @apply list-item list-decimal ml-[30px];
  }

  article h2,
  article h3 {
    @apply mt-8 mb-2;
  }
  article a {
    color: #9a4fba;
  }
  article img {
    @apply mx-auto my-4 rounded-lg;
  }

  .excalidraw {
    filter: invert(100%) hue-rotate(180deg);
  }
</style>
