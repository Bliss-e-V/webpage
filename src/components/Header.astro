---
import Badge from "@components/Badge";

const showHackathon = false;
---

<div
  id="header"
  class="fixed top-0 z-40 flex items-center justify-center w-full h-40 border-b border-transparent bg-black/70 select-none duration-500 mr-10 ml-10"
>
  <div class="container flex justify-between">
    <div class="flex items-center justify-start space-x-[50px]">
      <a id="logo" href="/" class="relative group">
        <img
          alt="bliss logo"
          src="/assets/bliss-logo.png"
          height={80}
          width={80}
        />
        <p
          class="absolute left-0 right-0 mx-auto text-sm font-medium text-center opacity-0 bg-accent-dark text-accent rounded-md group-hover:opacity-100 transition-opacity duration-300"
        >
          Home
        </p>
      </a>
    </div>
    <div id="menu" class="flex items-center space-x-7">
      {
        showHackathon && (
          <a
            id={`HackathonLink`}
            href={`/blissathon`}
            class="hidden text-sm tracking-wider sm:text-base no-underline sm:block text-secondary hover:text-primary transition-colors duration-300"
          >
            <p class="bg-accent-dark text-accent rounded-md px-2 text-lg hover:shadow-accent-small transition-shadow">
              Hackathon
            </p>
          </a>
        )
      }
      <a
        id="readingGroupLink"
        href="/reading-group"
        class="tracking-wider no-underline text-secondary hover:text-primary transition-colors"
      >
        <p>Reading Group</p>
      </a>
      <a
        id="mediaLink"
        href="/media"
        class="tracking-wider no-underline text-secondary hover:text-primary transition-colors"
      >
        <p>Media</p>
      </a>
      <a
        id="alumniLink"
        href="/alumni"
        class="tracking-wider no-underline text-secondary hover:text-primary transition-colors"
      >
        <p>Alumni</p>
      </a>
    </div>
  </div>
</div>

<style>
  #join-link:hover {
    text-decoration-color: transparent;
  }
</style>

<script>
  let windowWidth = window.innerWidth;

  // header
  const header = document.getElementById("header")!;

  // link animation
  const readingGroupLink: HTMLElement =
    document.getElementById("readingGroupLink")!;
  const mediaLink: HTMLElement = document.getElementById("mediaLink")!;
  const alumniLink: HTMLElement = document.getElementById("alumniLink")!;
  const hackathonLink: HTMLElement | null = document.getElementById("HackathonLink");
  const allLinks: HTMLElement[] = [readingGroupLink, mediaLink, alumniLink];
  if (hackathonLink) allLinks.push(hackathonLink);

  function animateHeader() {
    if (window.scrollY > 0) {
      header.classList.remove("h-40");
      header.classList.add("h-20");
      header.classList.add("backdrop-blur-md");
      header.classList.add("border-border");
      header.classList.remove("border-transparent");
    } else {
      header.classList.remove("h-20");
      header.classList.add("h-40");
      header.classList.remove("backdrop-blur-md");
      header.classList.remove("border-border");
      header.classList.add("border-transparent");
    }
  }

  function setActiveLink(activeLink: HTMLElement | null) {
    // Reset all links to secondary
    allLinks.forEach(link => {
      link.classList.remove("text-primary");
      link.classList.add("text-secondary");
    });

    // Set active link to primary
    if (activeLink) {
      activeLink.classList.remove("text-secondary");
      activeLink.classList.add("text-primary");
    }
  }

  function handleRoute() {
    // Set active link based on URL path
    const linkMap = {
      "/reading-group": readingGroupLink,
      "/media": mediaLink,
      "/alumni": alumniLink,
      "/blissathon": hackathonLink,
    }
    setActiveLink(linkMap[window.location.pathname as keyof typeof linkMap]);
  }

  function handleScroll() {
    animateHeader();
  }

  function handleResize() {
    windowWidth = window.innerWidth;
  }

  animateHeader();
  handleRoute();
  document.addEventListener("scroll", handleScroll);
  document.addEventListener("resize", handleResize);
</script>
