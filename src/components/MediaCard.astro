---
import ClientVideoEmbed from "@components/ClientVideoEmbed.astro";
import { MediaItem } from "@components/data/media";

interface Props {
  title: string;
  mediaItems: MediaItem[];
  isOpenByDefault: boolean;
}

const { title, mediaItems, isOpenByDefault = false } = Astro.props;
---

<details class="group mb-4" open={isOpenByDefault}>
  <summary class="cursor-pointer list-none">
    <div class="flex justify-between items-center">
      <h2 class="text-3xl sm:text-5xl text-transparent bg-clip-text bg-red-right font-bold">{title}</h2>
      <div class="transform group-open:rotate-180 transition-transform">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
      </div>
    </div>
  </summary>
  <div class="flex items-center justify-center flex-col mt-2 sm:mt-4">
    {mediaItems.length > 0 ? (
      mediaItems.map((item) => (
        <div class="w-10/12 mt-4">
          <div class="card p-4 bg-black rounded-lg shadow-md hover:bg-li {item.hasBorder ? 'border-b border-gray-700' : ''}">
            <h3 class="text-2xl font-bold text-white">{item.title || "Untitled"}</h3>
            <p class="text-sm text-gray-300">By {item.speaker || "Unknown"}</p>
            <p class="text-sm text-gray-300">Date: {new Date(item.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: '2-digit' })}</p>
            
            <!-- Speaker Introduction -->
            {item.speakerIntro && (
              <details class="detail-item mt-2">
                <summary class="text-sm text-gray-300 font-semibold flex items-center cursor-pointer">
                  <span>Speaker Introduction</span>
                  <svg class="ml-2 w-4 h-4 transform transition-transform detail-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </summary>
                <p class="text-sm text-gray-300 mt-2">{item.speakerIntro}</p>
              </details>
            )}
            
            <!-- Abstract -->
            {item.abstract && (
              <details class="detail-item mt-2">
                <summary class="text-sm text-gray-300 font-semibold flex items-center cursor-pointer">
                  <span>Abstract</span>
                  <svg class="ml-2 w-4 h-4 transform transition-transform detail-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </summary>
                <p class="text-sm text-gray-300 mt-2">{item.abstract}</p>
              </details>
            )}
            
            <!-- Media Content -->
            <div class="mt-4">
              <div class="carousel-container relative">
                <div class="carousel flex overflow-x-auto overflow-y-hidden space-x-4">
                  {item.videoLink && item.videoLink.trim() !== "" && (
                    <div class="flex-none w-1/3 video-container">
                        <ClientVideoEmbed src={item.videoLink} title={`${item.title || 'Event'} by ${item.speaker || 'Speaker'} video`} class="mb-4 video-embed" />
                    </div>
                  )}
                  
                  {item.imageUrls && item.imageUrls.length > 0 && item.imageUrls.map((url) => (
                    <div class="flex-none w-1/3">
                      <div class="media-item-container relative">
                        <div class="media-loading absolute inset-0 flex items-center justify-center bg-gray-800 rounded-lg">
                          <div class="loading-spinner"></div>
                          <span class="ml-2 text-white">Loading...</span>
                        </div>
                        <img 
                          src={url} 
                          alt={`${item.title || 'Event'} by ${item.speaker || 'BLISS Berlin'} - ${new Date(item.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long' })}`}
                          class="w-full h-48 object-cover rounded-lg cursor-pointer hover:scale-105 transition-transform media-image" 
                          onclick={`openMedia('image', '${url}')`}
                          loading="lazy"
                          onload="this.parentElement.querySelector('.media-loading').style.display = 'none';"
                        />
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      ))
    ) : (
      <div class="w-10/12 mt-4 text-center py-8">
        <p class="text-white mt-4">No Media-Items available</p>
      </div>
    )}
  </div>
</details>
