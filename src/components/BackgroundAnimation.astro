---

---

<div id="canvas" class="absolute top-0 left-0 w-screen h-screen md:fixed -z-10 flex flex-col items-end justify-center">
</div>

<script is:inline src="https://cdn.jsdelivr.net/npm/p5@1.9.3/lib/p5.js"></script>
<script is:inline>
  // Adapted from https://www.youtube.com/watch?v=sZBfLgfsvSk
  let particles = [];
  let velocities = [];
  const num = 300;

  const canvasSize = 720;

  const noiseScale = 2 / canvasSize;
  const velocityDecay = 7 / canvasSize;
  const maxVelocity = 100;
  const dt = 0.05;
  const gravityStrength = 1;
  const gravityEqualsOneAtDistance = 0.7;

  function setup() {
    let canvas = createCanvas(canvasSize, canvasSize);
    canvas.parent("canvas");
    console.log("setup");

    for (let i = 0; i < num; i++) {
      particles.push(
        createVector(
          random(
            canvasSize / 2 - canvasSize / 5,
            canvasSize / 2 + canvasSize / 5,
          ),
          random(
            canvasSize / 2 - canvasSize / 5,
            canvasSize / 2 + canvasSize / 5,
          ),
        ),
      );
      velocities.push(createVector(random(1), random(1)));
    }

    stroke(255);
    strokeWeight(1.5);
    clear();
  }

  function draw() {
    background(0, 25);
    for (let i = 0; i < num; i++) {
      let p = particles[i];
      let v = velocities[i];
      let color = getColor(p);
      stroke(color);
      point(p.x, p.y);
      let n = noise(
        p.x * noiseScale,
        p.y * noiseScale,
        frameCount * noiseScale * 0.5,
      );
      let a = 8 * TAU * n;

      let gravity = createVector(canvasSize / 2, canvasSize / 2).sub(p);
      gravity = gravity.div(canvasSize / 2);
      gravity = gravity.div(gravityEqualsOneAtDistance);
      gravity = gravity.setMag(gravity.mag() ** (1 / gravityStrength));

      let dx = cos(a) + gravity.x;
      let dy = sin(a) + gravity.y;
      v.x += dx - velocityDecay * v.x;
      v.y += dy - velocityDecay * v.y;
      v.x = constrain(v.x, -maxVelocity, maxVelocity);
      v.y = constrain(v.y, -maxVelocity, maxVelocity);
      p.x += dt * v.x;
      p.y += dt * v.y;
      // if(!onScreen(p)) {
      //   p.x = random(width);
      //   p.y = random(height);
      // }
    }
  }

  function getColor(p) {
    const colors = [
      [255, 0, 0], // red
      [255, 0, 0], // red
      [255, 128, 0], // orange
      [255, 255, 0], // yellow
      [0, 255, 0], // green
      [0, 0, 255], // blue
      [128, 0, 255], // purple
      [128, 0, 255], // purple
    ];
    const dx = canvasSize / 8;
    for (var i = 1; i < colors.length; i++) {
      if (p.y < i * dx) {
        var m = i * dx - p.y;
        if (m < dx) {
          m = dx - m;
        }
        m = m / dx;
        var c = color(
          (1 - m) * colors[i - 1][0] + m * colors[i][0],
          (1 - m) * colors[i - 1][1] + m * colors[i][1],
          (1 - m) * colors[i - 1][2] + m * colors[i][2],
        );
        return c;
      }
    }
    return colors[colors.length - 1];
  }

  function mouseReleased() {
    noiseSeed(millis());
  }

  // function onScreen(v) {
  //   return v.x >= 0 && v.x <= width && v.y >= 0 && v.y <= height;
  // }
</script>
