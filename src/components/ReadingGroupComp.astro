---
import Card from "@components/Card.astro";
import {
    dayToPapers,
    Paper,
    readingGroupSections,
} from "@components/data/papers";

const today = new Date().toISOString().split("T")[0];

const futurePapers = Object.entries(dayToPapers)
    .filter(([date, papers]) => date >= today)
    .reduce((obj, [date, papers]) => {
        obj[date] = papers;
        return obj;
    }, {});
const futurePaperList = Object.entries(futurePapers)
    .sort(([date1], [date2]) => date1.localeCompare(date2))
    .map(([, event]) => event)
    .flat() as Paper[];

const pastPapers = Object.entries(dayToPapers)
    .filter(([date, papers]) => date < today)
    .reduce((obj, [date, papers]) => {
        obj[date] = papers;
        return obj;
    }, {});
const pastPaperList = Object.entries(pastPapers)
    .sort(([date1], [date2]) => date2.localeCompare(date1))
    .map(([, event]) => event) as Paper[][];

// Group papers by section
const getPapersInDateRange = (
    startDate: Date,
    endDate: Date,
    papers: Paper[][],
) => {
    return papers.filter((paperGroup) => {
        const paperDate = paperGroup[0].readingDay;
        return paperDate >= startDate && paperDate <= endDate;
    });
};
---

<div>
    <h1
        class="text-4xl sm:text-5xl text-transparent bg-clip-text bg-red-right font-bold"
    >
        Reading Group
    </h1>
    <div
        class="w-full mb-10 max-w-full border-b sm:border-b-0 h-[0px] sm:h-[1px] bg-gradient-to-r from-gray-200 to-transparent ..."
    >
    </div>

    <div class="mb-10">
        <div class="text-lg mb-4">
            <strong>Get ready for the Winter Semester 2025/26!</strong>
        </div>
        <div class="mb-4">
            Our AI Reading Group will be back with exciting new papers and discussions. 
            We're currently planning the schedule and selecting fascinating topics to explore together.
        </div>
        <div class="text-secondary">
            ðŸ“… <strong>Details coming soon, stay tuned!
        </div>
    </div>

    {
        futurePaperList.length > 0 && (
            <div class="my-2">
                <h2 class="text-3xl sm:text-5xl text-transparent bg-clip-text bg-red-right font-bold">
                    Upcoming
                </h2>
                <div class="flex items-center justify-center flex-col mt-2 sm:mt-4">
                    <div class="w-10/12">
                        {futurePaperList.map((paper, i) => (
                            <Card
                                paper={paper}
                                hasBorder={i === futurePaperList.length - 1}
                            />
                        ))}
                    </div>
                </div>
            </div>
        )
    }

    <div class="my-2 mt-4">
        <h2
            class="text-3xl sm:text-5xl text-transparent bg-clip-text bg-red-right font-bold"
        >
            Past Papers
        </h2>
        <div class="flex items-center justify-center flex-col mt-2 sm:mt-4">
            {
                readingGroupSections.reverse().map((section) => {
                    const sectionPapers = getPapersInDateRange(
                        section.startDate,
                        section.endDate,
                        pastPaperList,
                    );

                    if (sectionPapers.length === 0) return null;

                    return (
                        <div class="w-10/12 border border-gray-200 rounded-lg p-4 m-4 bg-neutral-950">
                            <details class="group mb-4">
                                <summary class="cursor-pointer list-none">
                                    <div class="flex justify-between items-center">
                                        <div>
                                            <h3 class="text-2xl font-semibold mb-2">
                                                {section.title}
                                            </h3>
                                            <p class="text-secondary">
                                                Host: {section.host}
                                            </p>
                                        </div>
                                        <div class="transform group-open:rotate-180 transition-transform">
                                            <svg
                                                width="24"
                                                height="24"
                                                fill="none"
                                                viewBox="0 0 24 24"
                                                stroke="currentColor"
                                            >
                                                <path
                                                    stroke-linecap="round"
                                                    stroke-linejoin="round"
                                                    stroke-width="2"
                                                    d="M19 9l-7 7-7-7"
                                                />
                                            </svg>
                                        </div>
                                    </div>
                                    <p class="text-secondary">
                                        {section.description}
                                    </p>
                                </summary>
                                <div class="mt-4">
                                    {sectionPapers.map((papers) =>
                                        papers.map((paper, i) => (
                                            <Card
                                                paper={paper}
                                                hasBorder={
                                                    i === papers.length - 1
                                                }
                                            />
                                        )),
                                    )}
                                </div>
                            </details>
                        </div>
                    );
                })
            }
            {
                pastPaperList.length === 0 && (
                    <div class="text-secondary">No past papers available.</div>
                )
            }
        </div>
    </div>
</div>

<style>
    details > summary::-webkit-details-marker {
        display: none;
    }
</style>
