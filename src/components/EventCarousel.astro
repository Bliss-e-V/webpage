---
// Event data for the carousel
const events = [
  {
    title: "Speaker Series Kickoff",
    date: "Tue, Oct 21",
    description: "Federico Barbero, who is currently at DeepMind and University of Oxford, will discuss \"Why do LLMs struggle with Long Context?\"",
    link: "https://www.meetup.com/bliss-speaker-series/events/310955905/",
    color: "bg-red-900/50",
    textColor: "text-red-200"
  },
  {
    title: "Model Brawls | HackNight with Lyceum",
    date: "Thu, Oct 23",
    description: "Take a baseline neural network and dataset, then supercharge it in 2 hours using the latest GPU software truly optimized to accelerate training and inference.",
    link: "https://luma.com/modelbrawlslyceum",
    color: "bg-blue-900/50",
    textColor: "text-blue-200"
  },
  {
    title: "Reading Group Kickoff",
    date: "Monday, Oct 20",
    description: "Join us for discussions about state-of-the-art AI research with this semester's topic: variety of machine learning in healthcare.",
    link: "/reading-group",
    color: "bg-green-900/50",
    textColor: "text-green-200"
  }
];
---

<div class="event-carousel-container">
  <div class="event-carousel">
    <div class="event-slides-container" id="slidesContainer">
      {events.map((event, index) => (
        <div class="event-slide" data-index={index}>
          <a 
            href={event.link}
            class={`event-card ${event.color} ${event.textColor} block rounded-lg p-4 transition-all duration-300 hover:shadow-lg`}
            target={event.link.startsWith('http') ? '_blank' : '_self'}
            rel={event.link.startsWith('http') ? 'noopener noreferrer' : ''}
          >
            <div class="event-content">
              <div class="flex justify-between items-start">
                <div class="flex-1">
                  <h3 class="event-title text-xl font-bold mb-1">Upcoming: {event.title}</h3>
                  <p class="event-description text-sm">{event.description}</p>
                  <p class="event-date text-xs mb-2">{event.date}</p>
                </div>
                {event.link.startsWith('http') && (
                  <div class="external-link-icon ml-3 flex-shrink-0">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                  </div>
                )}
              </div>
            </div>
          </a>
        </div>
      ))}
    </div>
  </div>
  
  <!-- Navigation dots -->
  <div class="carousel-dots">
    {events.map((_, index) => (
      <button 
        class="carousel-dot" 
        data-index={index}
        aria-label={`Go to slide ${index + 1}`}
      ></button>
    ))}
  </div>
  
  <!-- Navigation arrows -->
  <button class="carousel-arrow carousel-arrow-left" aria-label="Previous slide">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
    </svg>
  </button>
  <button class="carousel-arrow carousel-arrow-right" aria-label="Next slide">
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
    </svg>
  </button>
</div>

<script>
  class EventCarousel {
    private currentIndex = 0;
    private slidesContainer: HTMLElement;
    private dots: NodeListOf<HTMLElement>;
    private leftArrow: HTMLElement;
    private rightArrow: HTMLElement;
    private autoPlayInterval: number | null = null;
    private readonly autoPlayDelay = 5000; // 5 seconds
    private readonly totalSlides: number;

    constructor() {
      this.slidesContainer = document.getElementById('slidesContainer') as HTMLElement;
      this.dots = document.querySelectorAll('.carousel-dot');
      this.leftArrow = document.querySelector('.carousel-arrow-left') as HTMLElement;
      this.rightArrow = document.querySelector('.carousel-arrow-right') as HTMLElement;
      this.totalSlides = this.dots.length;

      this.init();
    }

    private init() {
      if (!this.slidesContainer || this.totalSlides === 0) return;

      // Set up event listeners
      this.leftArrow?.addEventListener('click', () => this.previousSlide());
      this.rightArrow?.addEventListener('click', () => this.nextSlide());

      // Set up dot navigation
      this.dots.forEach((dot, index) => {
        dot.addEventListener('click', () => this.goToSlide(index));
      });

      // Set up keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') this.previousSlide();
        if (e.key === 'ArrowRight') this.nextSlide();
      });

      // Set up touch/swipe support
      this.setupTouchSupport();

      // Start auto-play
      this.startAutoPlay();

      // Pause auto-play on hover
      const carousel = document.querySelector('.event-carousel-container');
      carousel?.addEventListener('mouseenter', () => this.stopAutoPlay());
      carousel?.addEventListener('mouseleave', () => this.startAutoPlay());

      // Initial display
      this.updateDisplay();
    }

    private setupTouchSupport() {
      let startX = 0;
      let endX = 0;
      const carousel = document.querySelector('.event-carousel-container');

      carousel?.addEventListener('touchstart', (e) => {
        const touchEvent = e as TouchEvent;
        startX = touchEvent.touches[0].clientX;
      });

      carousel?.addEventListener('touchend', (e) => {
        const touchEvent = e as TouchEvent;
        endX = touchEvent.changedTouches[0].clientX;
        this.handleSwipe(startX, endX);
      });
    }

    private handleSwipe(startX: number, endX: number) {
      const threshold = 50;
      const diff = startX - endX;

      if (Math.abs(diff) > threshold) {
        if (diff > 0) {
          this.nextSlide();
        } else {
          this.previousSlide();
        }
      }
    }

    private goToSlide(index: number) {
      this.currentIndex = index;
      this.updateDisplay();
      this.resetAutoPlay();
    }

    private nextSlide() {
      this.currentIndex = (this.currentIndex + 1) % this.totalSlides;
      this.updateDisplay();
      this.resetAutoPlay();
    }

    private previousSlide() {
      this.currentIndex = (this.currentIndex - 1 + this.totalSlides) % this.totalSlides;
      this.updateDisplay();
      this.resetAutoPlay();
    }

    private updateDisplay() {
      // Update slides container position
      const translateX = -this.currentIndex * 33.333; // 33.333% per slide
      this.slidesContainer.style.transform = `translateX(${translateX}%)`;

      // Update dots
      this.dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === this.currentIndex);
      });
    }

    private startAutoPlay() {
      this.stopAutoPlay();
      this.autoPlayInterval = window.setInterval(() => {
        this.nextSlide();
      }, this.autoPlayDelay);
    }

    private stopAutoPlay() {
      if (this.autoPlayInterval) {
        clearInterval(this.autoPlayInterval);
        this.autoPlayInterval = null;
      }
    }

    private resetAutoPlay() {
      this.stopAutoPlay();
      this.startAutoPlay();
    }
  }

  // Initialize carousel when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new EventCarousel();
  });
</script>

<style>
  .event-carousel-container {
    position: relative;
    width: 100%;
    max-width: 80rem;
    margin: 0 auto;
    padding: 0 40px;
  }

  .event-carousel {
    position: relative;
    overflow: hidden;
    border-radius: 12px;
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6));
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .event-slides-container {
    display: flex;
    width: 300%; /* 3 slides * 100% */
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .event-slide {
    width: 33.333%; /* 100% / 3 slides */
    flex-shrink: 0;
  }

  .event-card {
    text-decoration: none;
    display: block;
    min-height: 80px;
    position: relative;
    overflow: hidden;
  }

  .event-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }

  .event-card:hover::before {
    transform: translateX(100%);
  }

  .event-content {
    position: relative;
    z-index: 1;
    padding: 0.3rem;
  }

  .event-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 0.25rem;
  }

  .event-date {
    font-size: 0.75rem;
    font-weight: 400;
  }

  .event-description {
    font-size: 0.875rem;
    line-height: 1.4;
    margin-bottom: 0.25rem;
  }

  .external-link-icon {
    display: inline-flex;
    align-items: center;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }

  .event-card:hover .external-link-icon {
    opacity: 1;
  }

  .carousel-dots {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .carousel-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: none;
    background: rgba(255, 255, 255, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .carousel-dot:hover {
    background: rgba(255, 255, 255, 0.6);
    transform: scale(1.2);
  }

  .carousel-dot.active {
    background: var(--accent);
    transform: scale(1.3);
  }

  .carousel-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.7);
    border: none;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 10;
  }

  .carousel-arrow:hover {
    background: rgba(0, 0, 0, 0.9);
    transform: translateY(-50%) scale(1.1);
  }

  .carousel-arrow-left {
    left: 10px;
  }

  .carousel-arrow-right {
    right: 10px;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .event-carousel-container {
      padding: 0 10px;
    }

    .event-content {
      padding: 0.75rem;
    }

    .event-title {
      font-size: 1.125rem;
    }

    .event-day {
      font-size: 0.8rem;
    }

    .event-date {
      font-size: 0.7rem;
    }

    .event-description {
      font-size: 0.8rem;
    }

    .carousel-arrow {
      width: 35px;
      height: 35px;
    }

    .carousel-arrow-left {
      left: 5px;
    }

    .carousel-arrow-right {
      right: 5px;
    }
  }

  @media (max-width: 480px) {
    .event-card {
      min-height: 70px;
    }

    .event-content {
      padding: 0.5rem;
    }

    .event-title {
      font-size: 1rem;
    }

    .event-day {
      font-size: 0.75rem;
    }

    .event-date {
      font-size: 0.65rem;
    }

    .event-description {
      font-size: 0.75rem;
    }
  }

  /* Smooth slide transitions */
  .event-slides-container {
    will-change: transform;
  }
</style>
